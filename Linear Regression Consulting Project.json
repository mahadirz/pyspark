{"paragraphs":[{"text":"%md\nCongratulations! You've been contracted by Hyundai Heavy Industries to help them build a predictive model for some ships. [Hyundai Heavy Industries](http://www.hyundai.eu/en) is one of the world's largest ship manufacturing companies and builds cruise liners.\n\nYou've been flown to their headquarters in Ulsan, South Korea to help them give accurate estimates of how many crew members a ship will require.\n\nThey are currently building new ships for some customers and want you to create a model and use it to predict how many crew members the ships will need.\n\nHere is what the data looks like so far:\n\n    Description: Measurements of ship size, capacity, crew, and age for 158 cruise\n    ships.\n\n\n    Variables/Columns\n    Ship Name     1-20\n    Cruise Line   21-40\n    Age (as of 2013)   46-48\n    Tonnage (1000s of tons)   50-56\n    passengers (100s)   58-64\n    Length (100s of feet)  66-72\n    Cabins  (100s)   74-80\n    Passenger Density   82-88\n    Crew  (100s)   90-96\n    \nIt is saved in a csv file for you called \"cruise_ship_info.csv\". Your job is to create a regression model that will help predict how many crew members will be needed for future ships. The client also mentioned that they have found that particular cruise lines will differ in acceptable crew counts, so it is most likely an important feature to include in your analysis! \n","user":"anonymous","dateUpdated":"2017-09-03T17:24:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"text","editOnDblClick":false},"editorMode":"ace/mode/text","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Congratulations! You've been contracted by Hyundai Heavy Industries to help them build a predictive model for some ships. <a href=\"http://www.hyundai.eu/en\">Hyundai Heavy Industries</a> is one of the world's largest ship manufacturing companies and builds cruise liners.</p>\n<p>You've been flown to their headquarters in Ulsan, South Korea to help them give accurate estimates of how many crew members a ship will require.</p>\n<p>They are currently building new ships for some customers and want you to create a model and use it to predict how many crew members the ships will need.</p>\n<p>Here is what the data looks like so far:</p>\n<pre><code>Description: Measurements of ship size, capacity, crew, and age for 158 cruise\nships.\n\n\nVariables/Columns\nShip Name     1-20\nCruise Line   21-40\nAge (as of 2013)   46-48\nTonnage (1000s of tons)   50-56\npassengers (100s)   58-64\nLength (100s of feet)  66-72\nCabins  (100s)   74-80\nPassenger Density   82-88\nCrew  (100s)   90-96\n</code></pre>\n<p>It is saved in a csv file for you called &ldquo;cruise_ship_info.csv&rdquo;. Your job is to create a regression model that will help predict how many crew members will be needed for future ships. The client also mentioned that they have found that particular cruise lines will differ in acceptable crew counts, so it is most likely an important feature to include in your analysis!</p>\n"}]},"apps":[],"jobName":"paragraph_1504459398780_-1163282234","id":"20170903-172318_623390007","dateCreated":"2017-09-03T17:23:18+0000","dateStarted":"2017-09-03T17:23:34+0000","dateFinished":"2017-09-03T17:23:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2599"},{"text":"%pyspark\n#load the data\ncruiseShipData = spark.read.csv('s3://hgtuah/cruise_ship_info.csv',inferSchema=True,header=True)","user":"anonymous","dateUpdated":"2017-09-04T06:34:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1504440223927_-1811242671","id":"20170903-120343_1529232790","dateCreated":"2017-09-03T12:03:43+0000","dateStarted":"2017-09-04T06:34:22+0000","dateFinished":"2017-09-04T06:34:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2600"},{"text":"%pyspark\n#let's take a peek into the data\ncruiseShipData.show()","user":"anonymous","dateUpdated":"2017-09-04T06:34:30+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","title":false,"lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+-----------+---+------------------+----------+------+------+-----------------+----+\n|  Ship_name|Cruise_line|Age|           Tonnage|passengers|length|cabins|passenger_density|crew|\n+-----------+-----------+---+------------------+----------+------+------+-----------------+----+\n|    Journey|    Azamara|  6|30.276999999999997|      6.94|  5.94|  3.55|            42.64|3.55|\n|      Quest|    Azamara|  6|30.276999999999997|      6.94|  5.94|  3.55|            42.64|3.55|\n|Celebration|   Carnival| 26|            47.262|     14.86|  7.22|  7.43|             31.8| 6.7|\n|   Conquest|   Carnival| 11|             110.0|     29.74|  9.53| 14.88|            36.99|19.1|\n|    Destiny|   Carnival| 17|           101.353|     26.42|  8.92| 13.21|            38.36|10.0|\n|    Ecstasy|   Carnival| 22|            70.367|     20.52|  8.55|  10.2|            34.29| 9.2|\n|    Elation|   Carnival| 15|            70.367|     20.52|  8.55|  10.2|            34.29| 9.2|\n|    Fantasy|   Carnival| 23|            70.367|     20.56|  8.55| 10.22|            34.23| 9.2|\n|Fascination|   Carnival| 19|            70.367|     20.52|  8.55|  10.2|            34.29| 9.2|\n|    Freedom|   Carnival|  6|110.23899999999999|      37.0|  9.51| 14.87|            29.79|11.5|\n|      Glory|   Carnival| 10|             110.0|     29.74|  9.51| 14.87|            36.99|11.6|\n|    Holiday|   Carnival| 28|            46.052|     14.52|  7.27|  7.26|            31.72| 6.6|\n|Imagination|   Carnival| 18|            70.367|     20.52|  8.55|  10.2|            34.29| 9.2|\n|Inspiration|   Carnival| 17|            70.367|     20.52|  8.55|  10.2|            34.29| 9.2|\n|     Legend|   Carnival| 11|              86.0|     21.24|  9.63| 10.62|            40.49| 9.3|\n|   Liberty*|   Carnival|  8|             110.0|     29.74|  9.51| 14.87|            36.99|11.6|\n|    Miracle|   Carnival|  9|              88.5|     21.24|  9.63| 10.62|            41.67|10.3|\n|   Paradise|   Carnival| 15|            70.367|     20.52|  8.55|  10.2|            34.29| 9.2|\n|      Pride|   Carnival| 12|              88.5|     21.24|  9.63| 11.62|            41.67| 9.3|\n|  Sensation|   Carnival| 20|            70.367|     20.52|  8.55|  10.2|            34.29| 9.2|\n+-----------+-----------+---+------------------+----------+------+------+-----------------+----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1504440243318_795461776","id":"20170903-120403_1705551760","dateCreated":"2017-09-03T12:04:03+0000","dateStarted":"2017-09-04T06:34:30+0000","dateFinished":"2017-09-04T06:34:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2601"},{"text":"%pyspark\n# import all the packages required\nfrom pyspark.ml.regression import LinearRegression\nfrom pyspark.ml.linalg import Vectors\nfrom pyspark.ml.feature import VectorAssembler\nfrom pyspark.ml.feature import StringIndexer\nfrom pyspark.sql.functions import corr\n\nfrom pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.tuning import ParamGridBuilder, TrainValidationSplit","user":"anonymous","dateUpdated":"2017-09-04T06:34:36+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1504440253310_-1276026303","id":"20170903-120413_1290971374","dateCreated":"2017-09-03T12:04:13+0000","dateStarted":"2017-09-04T06:34:36+0000","dateFinished":"2017-09-04T06:34:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2602"},{"text":"%pyspark\n# list all columns\ncruiseShipData.columns","user":"anonymous","dateUpdated":"2017-09-04T06:34:39+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Ship_name', 'Cruise_line', 'Age', 'Tonnage', 'passengers', 'length', 'cabins', 'passenger_density', 'crew']\n"}]},"apps":[],"jobName":"paragraph_1504459633404_1577236564","id":"20170903-172713_769826523","dateCreated":"2017-09-03T17:27:13+0000","dateStarted":"2017-09-04T06:34:39+0000","dateFinished":"2017-09-04T06:34:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2603"},{"text":"%pyspark\n# we'll take a look at the occurance of each cruise line \ncruiseShipData.groupBy(\"Cruise_line\").count().orderBy(desc(\"count\")).show()","user":"anonymous","dateUpdated":"2017-09-04T06:34:58+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------------+-----+\n|      Cruise_line|count|\n+-----------------+-----+\n|  Royal_Caribbean|   23|\n|         Carnival|   22|\n|         Princess|   17|\n| Holland_American|   14|\n|        Norwegian|   13|\n|            Costa|   11|\n|        Celebrity|   10|\n|              MSC|    8|\n|              P&O|    6|\n|             Star|    6|\n|Regent_Seven_Seas|    5|\n|        Silversea|    4|\n|          Oceania|    3|\n|           Cunard|    3|\n|         Seabourn|    3|\n|         Windstar|    3|\n|          Crystal|    2|\n|           Disney|    2|\n|          Azamara|    2|\n|           Orient|    1|\n+-----------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1504459805188_1872601126","id":"20170903-173005_1289341099","dateCreated":"2017-09-03T17:30:05+0000","dateStarted":"2017-09-04T06:34:58+0000","dateFinished":"2017-09-04T06:35:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2604"},{"text":"%pyspark\n# use StringIndexer to transform cruise line into index\nindexer = StringIndexer(inputCol=\"Cruise_line\", outputCol=\"cruise\")\nindexed = indexer.fit(cruiseShipData).transform(cruiseShipData)\nindexed.orderBy(asc(\"cruise\")).show()","user":"anonymous","dateUpdated":"2017-09-04T06:35:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------+---------------+---+-------+----------+------+------+-----------------+-----+------+\n|   Ship_name|    Cruise_line|Age|Tonnage|passengers|length|cabins|passenger_density| crew|cruise|\n+------------+---------------+---+-------+----------+------+------+-----------------+-----+------+\n|   Adventure|Royal_Caribbean| 12|  138.0|     31.14|  10.2| 15.57|            44.32|11.85|   0.0|\n|   Splendour|Royal_Caribbean| 17|   70.0|     20.76|  8.67|  9.02|            33.72|  7.2|   0.0|\n|  Brilliance|Royal_Caribbean| 11|  90.09|     25.01|  9.62|  10.5|            36.02| 8.48|   0.0|\n|     Empress|Royal_Caribbean| 23| 48.563|      20.2|  6.92|   8.0|            24.04| 6.71|   0.0|\n| Enchantment|Royal_Caribbean| 16| 74.137|      19.5|  9.16|  9.75|            38.02|  7.6|   0.0|\n|    Explorer|Royal_Caribbean| 13|  138.0|     31.14|  10.2| 15.57|            44.32|11.76|   0.0|\n|     Freedom|Royal_Caribbean|  7|  158.0|      43.7| 11.12|  18.0|            36.16| 13.6|   0.0|\n|    Grandeur|Royal_Caribbean| 17| 74.137|      19.5|  9.16|  9.75|            38.02|  7.6|   0.0|\n|Independence|Royal_Caribbean|  5|  160.0|     36.34| 11.12| 18.17|            44.03| 13.6|   0.0|\n|       Jewel|Royal_Caribbean|  9|  90.09|     25.01|  9.62| 10.94|            36.02| 8.69|   0.0|\n|      Legend|Royal_Caribbean| 18|   70.0|      18.0|  8.67|   9.0|            38.89|  7.2|   0.0|\n|     Liberty|Royal_Caribbean|  6|  158.0|      43.7| 11.25|  18.0|            36.16| 13.6|   0.0|\n|     Majesty|Royal_Caribbean| 21| 73.941|     27.44|   8.8| 11.75|            26.95| 8.22|   0.0|\n|     Mariner|Royal_Caribbean| 10|  138.0|     31.14|  10.2| 15.57|            44.32|11.85|   0.0|\n|     Monarch|Royal_Caribbean| 22| 73.941|     27.44|   8.8| 11.77|            30.94| 8.22|   0.0|\n|   Navigator|Royal_Caribbean| 11|  138.0|     31.14|  10.2| 15.57|            44.32|11.85|   0.0|\n|       Oasis|Royal_Caribbean|  4|  220.0|      54.0| 11.82|  27.0|            40.74| 21.0|   0.0|\n|    Radiance|Royal_Caribbean| 12|  90.09|     25.01|  9.62|  10.5|            36.02| 8.68|   0.0|\n|    Rhapsody|Royal_Caribbean| 16| 78.491|     24.35|  9.15|  10.0|            32.23| 7.65|   0.0|\n|    Serenade|Royal_Caribbean| 10|  90.09|     25.01|  9.62|  10.5|            36.02| 8.58|   0.0|\n+------------+---------------+---+-------+----------+------+------+-----------------+-----+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1504441061838_-313420136","id":"20170903-121741_1396040569","dateCreated":"2017-09-03T12:17:41+0000","dateStarted":"2017-09-04T06:35:14+0000","dateFinished":"2017-09-04T06:35:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2605"},{"text":"%pyspark\n#assemble all the features \nassembler = VectorAssembler(\n    inputCols=[\"Age\", \"Tonnage\", \n               \"passengers\",'length','cabins','passenger_density','cruise'],\n    outputCol=\"features\")\noutput = assembler.transform(indexed)","user":"anonymous","dateUpdated":"2017-09-04T06:35:25+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1504440480130_1125361793","id":"20170903-120800_1291352825","dateCreated":"2017-09-03T12:08:00+0000","dateStarted":"2017-09-04T06:35:25+0000","dateFinished":"2017-09-04T06:35:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2606"},{"text":"%pyspark\n#give a peek into the features and label\noutput.select(\"features\",\"crew\").collect()[0]","user":"anonymous","dateUpdated":"2017-09-04T06:35:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Row(features=DenseVector([6.0, 30.277, 6.94, 5.94, 3.55, 42.64, 16.0]), crew=3.55)\n"}]},"apps":[],"jobName":"paragraph_1504449998776_-1132680084","id":"20170903-144638_111428608","dateCreated":"2017-09-03T14:46:38+0000","dateStarted":"2017-09-04T06:35:29+0000","dateFinished":"2017-09-04T06:35:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2607"},{"text":"%pyspark\n#select only the features and crew columns\nfinal_data = output.select(\"features\",'crew')","user":"anonymous","dateUpdated":"2017-09-04T06:35:32+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1504440643866_-718726005","id":"20170903-121043_112091693","dateCreated":"2017-09-03T12:10:43+0000","dateStarted":"2017-09-04T06:35:32+0000","dateFinished":"2017-09-04T06:35:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2608"},{"text":"%pyspark\n#randomnly split for train and test\ntrain_data,test_data = final_data.randomSplit([0.7,0.3])","user":"anonymous","dateUpdated":"2017-09-04T06:35:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1504440706854_837506675","id":"20170903-121146_779614047","dateCreated":"2017-09-03T12:11:46+0000","dateStarted":"2017-09-04T06:35:35+0000","dateFinished":"2017-09-04T06:35:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2609"},{"text":"%pyspark\n#some statistics of crew train data\ntrain_data.describe().show()","user":"anonymous","dateUpdated":"2017-09-04T06:35:39+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------------+\n|summary|              crew|\n+-------+------------------+\n|  count|               119|\n|   mean| 7.849327731092448|\n| stddev|3.2871224681316105|\n|    min|              0.59|\n|    max|              19.1|\n+-------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1504440719594_565104454","id":"20170903-121159_598769382","dateCreated":"2017-09-03T12:11:59+0000","dateStarted":"2017-09-04T06:35:39+0000","dateFinished":"2017-09-04T06:35:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2610"},{"text":"%pyspark\n#some statistics of crew test data\ntest_data.describe().show()","user":"anonymous","dateUpdated":"2017-09-04T06:35:41+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-----------------+\n|summary|             crew|\n+-------+-----------------+\n|  count|               39|\n|   mean|7.625897435897434|\n| stddev|4.137780817596183|\n|    min|             0.59|\n|    max|             21.0|\n+-------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1504440730390_384303119","id":"20170903-121210_1346262894","dateCreated":"2017-09-03T12:12:10+0000","dateStarted":"2017-09-04T06:35:41+0000","dateFinished":"2017-09-04T06:35:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2611"},{"text":"%pyspark\n#do some simple tuning\nfinal_dataCV = final_data.selectExpr(\"features as features\", \"crew as label\")\ntrainCV, testCV = final_dataCV.randomSplit([0.9, 0.1])\n\nlr = LinearRegression(maxIter=10)\n\n# We use a ParamGridBuilder to construct a grid of parameters to search over.\n# TrainValidationSplit will try all combinations of values and determine best model using\n# the evaluator.\nparamGrid = ParamGridBuilder()\\\n    .addGrid(lr.regParam, [0.1, 0.01]) \\\n    .addGrid(lr.fitIntercept, [False, True])\\\n    .addGrid(lr.elasticNetParam, [0.0, 0.5, 1.0])\\\n    .build()\n\n# In this case the estimator is simply the linear regression.\n# A TrainValidationSplit requires an Estimator, a set of Estimator ParamMaps, and an Evaluator.\ntvs = TrainValidationSplit(estimator=lr,\n                           estimatorParamMaps=paramGrid,\n                           evaluator=RegressionEvaluator(),\n                           # 80% of the data will be used for training, 20% for validation.\n                           trainRatio=0.8)\n\n# Run TrainValidationSplit, and choose the best set of parameters.\nmodel = tvs.fit(trainCV)\n\n# Make predictions on test data. model is the model with combination of parameters\n# that performed best.\nmodel.transform(testCV)\\\n    .select(\"features\", \"label\", \"prediction\")\\\n    .show()","user":"anonymous","dateUpdated":"2017-09-04T06:35:46+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----+------------------+\n|            features|label|        prediction|\n+--------------------+-----+------------------+\n|[6.0,30.276999999...| 3.55| 4.294746781705833|\n|[7.0,158.0,43.7,1...| 13.6|  14.6717527702643|\n|[8.0,110.0,29.74,...| 11.6|11.901619206954738|\n|[9.0,110.0,29.74,...| 11.6|11.890786675883227|\n|[10.0,90.09,25.01...| 8.58| 9.376155113959829|\n|[12.0,88.5,21.24,...|  9.3| 9.956108868655926|\n|[13.0,91.0,20.32,...| 9.99| 9.191591825006878|\n|[13.0,138.0,31.14...|11.76|12.858243062616948|\n|[14.0,138.0,31.14...|11.76|12.844068372399335|\n|[18.0,70.60600000...| 8.58| 7.800238791865407|\n|[21.0,50.76,17.48...| 6.14| 7.183172776183487|\n|[22.0,70.367,20.5...|  9.2| 8.443788290678816|\n|[24.0,10.0,2.08,4...|  1.6|1.8229711819914145|\n|[25.0,42.0,15.04,...|  6.3| 6.240608183468723|\n|[27.0,53.872,14.9...| 6.36| 6.794590587766894|\n|[36.0,16.852,9.52...| 2.97|3.4391842295611754|\n+--------------------+-----+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1504462086369_-1579518724","id":"20170903-180806_1493807031","dateCreated":"2017-09-03T18:08:06+0000","dateStarted":"2017-09-04T06:35:46+0000","dateFinished":"2017-09-04T06:36:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2612"},{"text":"%pyspark\n#extract the hyperparameters\nbestModel = model.bestModel\nregParam = bestModel._java_obj.getRegParam()\nmaxIter = bestModel._java_obj.getMaxIter()\nelasticNetParam = bestModel._java_obj.getElasticNetParam()\nprint('Best Param (regParam): ',regParam)\nprint ('Best Param (MaxIter): ',maxIter)\nprint('Best Param (elasticNetParam): ', elasticNetParam)","user":"anonymous","dateUpdated":"2017-09-04T06:36:10+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"('Best Param (regParam): ', 0.1)\n('Best Param (MaxIter): ', 10)\n('Best Param (elasticNetParam): ', 0.0)\n"}]},"apps":[],"jobName":"paragraph_1504463059749_-1360052031","id":"20170903-182419_2088895254","dateCreated":"2017-09-03T18:24:19+0000","dateStarted":"2017-09-04T06:36:10+0000","dateFinished":"2017-09-04T06:36:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2613"},{"text":"%pyspark\n# Create a Linear Regression Model object\nlr = LinearRegression(labelCol='crew',maxIter=maxIter, regParam=regParam, elasticNetParam=elasticNetParam)\n","user":"anonymous","dateUpdated":"2017-09-04T06:36:12+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1504440744950_-391350664","id":"20170903-121224_663811942","dateCreated":"2017-09-03T12:12:24+0000","dateStarted":"2017-09-04T06:36:12+0000","dateFinished":"2017-09-04T06:36:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2614"},{"text":"%pyspark\n# Fit the model to the data and call this model lrModel\nlrModel = lr.fit(train_data,)","user":"anonymous","dateUpdated":"2017-09-04T06:36:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1504440889206_2095295157","id":"20170903-121449_2057291133","dateCreated":"2017-09-03T12:14:49+0000","dateStarted":"2017-09-04T06:36:15+0000","dateFinished":"2017-09-04T06:36:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2615"},{"text":"%pyspark\n# Print the coefficients and intercept for linear regression\nprint(\"Coefficients: {} Intercept: {}\".format(lrModel.coefficients,lrModel.intercept))","user":"anonymous","dateUpdated":"2017-09-04T06:36:17+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Coefficients: [-0.00703241178441,0.0199707228867,-0.0097120168622,0.383914629641,0.472603519494,-0.00493251436748,0.0336588141879] Intercept: -0.579609087232\n"}]},"apps":[],"jobName":"paragraph_1504440937306_768742247","id":"20170903-121537_146337040","dateCreated":"2017-09-03T12:15:37+0000","dateStarted":"2017-09-04T06:36:17+0000","dateFinished":"2017-09-04T06:36:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2616"},{"text":"%pyspark\n# Summarize the model over the training set and print out some metrics\ntrainingSummary = lrModel.summary\nprint(\"numIterations: %d\" % trainingSummary.totalIterations)\n#print(\"objectiveHistory: %s\" % str(trainingSummary.objectiveHistory))\n#trainingSummary.residuals.show()\nprint(\"RMSE: %f\" % trainingSummary.rootMeanSquaredError)\nprint(\"r2: %f\" % trainingSummary.r2)","user":"anonymous","dateUpdated":"2017-09-04T06:36:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numIterations: 1\nRMSE: 1.078457\nr2: 0.891448\n"}]},"apps":[],"jobName":"paragraph_1504461025164_-107958685","id":"20170903-175025_1326962752","dateCreated":"2017-09-03T17:50:25+0000","dateStarted":"2017-09-04T06:36:20+0000","dateFinished":"2017-09-04T06:36:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2617"},{"text":"%pyspark\n# Summarize the model over the test set and print out some metrics\ntestSummary = lrModel.evaluate(test_data)\nprint(\"RMSE: %f\" % testSummary.rootMeanSquaredError)\nprint(\"r2: %f\" % testSummary.r2)","user":"anonymous","dateUpdated":"2017-09-04T06:36:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"RMSE: 0.705804\nr2: 0.970138\n"}]},"apps":[],"jobName":"paragraph_1504440983262_-2084308765","id":"20170903-121623_185765791","dateCreated":"2017-09-03T12:16:23+0000","dateStarted":"2017-09-04T06:36:56+0000","dateFinished":"2017-09-04T06:36:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2618"},{"text":"%md\n##The metric should be around these:\n#####Train\nRMSE: 0.847660\nR2: 0.938658\n\n#####Test\nRMSE: 1.45526888877\nR2: 0.832540331933","user":"anonymous","dateUpdated":"2017-09-03T19:36:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h2>The metric should be around these:</h2>\n<h5>Train</h5>\n<p>RMSE: 0.847660\n<br  />R2: 0.938658</p>\n<h5>Test</h5>\n<p>RMSE: 1.45526888877\n<br  />R2: 0.832540331933</p>\n"}]},"apps":[],"jobName":"paragraph_1504451269452_-1540719187","id":"20170903-150749_2119416186","dateCreated":"2017-09-03T15:07:49+0000","dateStarted":"2017-09-03T19:36:14+0000","dateFinished":"2017-09-03T19:36:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2619"},{"text":"%pyspark\n#just reality check for correlation between crew and passengers\ndf.select(corr(\"crew\",\"passengers\")).show()\n","user":"anonymous","dateUpdated":"2017-09-04T06:37:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------------+\n|corr(crew, passengers)|\n+----------------------+\n|    0.9152341306065384|\n+----------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1504449708309_-1609598510","id":"20170903-144148_1099765142","dateCreated":"2017-09-03T14:41:48+0000","dateStarted":"2017-09-04T06:37:22+0000","dateFinished":"2017-09-04T06:37:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2620"},{"text":"%pyspark\n#reality checks\ndf.select(corr('crew','cabins')).show()","user":"anonymous","dateUpdated":"2017-09-04T06:37:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------+\n|corr(crew, cabins)|\n+------------------+\n|0.9508226063578497|\n+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1504450233124_-1680441569","id":"20170903-145033_978693510","dateCreated":"2017-09-03T14:50:33+0000","dateStarted":"2017-09-04T06:37:19+0000","dateFinished":"2017-09-04T06:37:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2621"},{"text":"%pyspark\n#reality checks\nindexed.select(corr('crew','cruise')).show()","user":"anonymous","dateUpdated":"2017-09-04T06:37:17+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+\n|  corr(crew, cruise)|\n+--------------------+\n|-0.48332562728617057|\n+--------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1504452871136_820214435","id":"20170903-153431_557869730","dateCreated":"2017-09-03T15:34:31+0000","dateStarted":"2017-09-04T06:37:17+0000","dateFinished":"2017-09-04T06:37:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2622"},{"text":"%pyspark\n#try make some prediction\n#cruise = indexed.filter(indexed[\"Cruise_line\"] == row['Cruise_line']).select(\"Cruise_line\",\"cruise\").limit(1).collect()\npredictionData  = spark.createDataFrame([\n    (\"Blue Royal\", \"Royal_Caribbean\",6,150.342,43.24,40.98,12.11,17.86,0.00),\n    (\"Sunny\", \"Royal_Caribbean\",12,138.0,31.14,10.2,15.57,44.32,0.00),\n], ['Ship_name', 'Cruise_line', 'Age', 'Tonnage', 'passengers', 'length', 'cabins', 'passenger_density','cruise'])\nassembler = VectorAssembler(\n    inputCols=[\"Age\", \"Tonnage\", \n               \"passengers\",'length','cabins','passenger_density','cruise'],\n    outputCol=\"features\")\npredictionData = assembler.transform(predictionData).select(\"features\")\n#print outputActual.show()\nprediction = lrModel.transform(predictionData)\nprediction.show()","user":"anonymous","dateUpdated":"2017-09-04T07:16:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1504467441890_765890608","id":"20170903-193721_1192684094","dateCreated":"2017-09-03T19:37:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2623","dateFinished":"2017-09-04T07:16:15+0000","dateStarted":"2017-09-04T07:16:15+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+------------------+\n|            features|        prediction|\n+--------------------+------------------+\n|[6.0,150.342,43.2...|23.328642690339475|\n|[12.0,138.0,31.14...|12.845286508727302|\n+--------------------+------------------+\n\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2017-09-04T06:33:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1504506785356_-81558345","id":"20170904-063305_1369449435","dateCreated":"2017-09-04T06:33:05+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3320"}],"name":"Linear Regression Consulting Project","id":"2CUWB1GSQ","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}